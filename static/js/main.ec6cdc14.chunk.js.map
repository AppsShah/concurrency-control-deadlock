{"version":3,"sources":["main/Drawcard.jsx","main/Main.jsx","Binary/Bsem.jsx","tsl/Tslinfocard.jsx","tsl/Gui.jsx","tsl/Tsl.jsx","counting/Csem.jsx","counting/Counting.jsx","pcproblem/Pc.jsx","Bankers/tables/Table1.jsx","Bankers/Banker.jsx","turn/Turn.jsx","paterson/Paterson.jsx","App.jsx","index.js"],"names":["cardstyle","width","fontSize","margin","marginTop","backgroundColor","color","boder","Drawcard","props","Card","style","className","Body","Title","title","Subtitle","topic","Text","dis","href","cardlink","Main","sema","max","counter","waiting","this","acquire","Promise","resolve","err","push","release","length","shift","purge","unresolved","i","get_value","processes","document","getElementById","value","test","id","a","console","log","createQueue","remove","createRun","setTimeout","createFinish","error","queue","createElement","appendChild","innerHTML","run","fin","clearall","val","t","divstyle","height","border","Bsem","class","type","onClick","borderRadius","Tslinfocard","marginLeft","boxShadow","fontFamily","padding","fontWeight","Link","btnstyle","lock","process","event","idn","target","pro","time","Math","floor","random","timetodisplay","alert","Gui","Tsl","Semaphore","Csem","InputGroup","size","Prepend","Button","variant","Counting","header","textAlign","card","button","buffer","variable","float","ids","arr","Empty","count","produce","rand","data","charAt","h3","buffers","ID","splice","index","consume","d","Pc","Header","table1","infocard","table","smalltable","idarr","alloarr","sysmax","avail","currentneed","autofill","temp2","temp","ids2","j","temp3","giveid","allo","maxneed","parseInt","allodata","systemmax","rows","cells","processarray","getprocess","f1","inc","seq","Table1","Table","striped","bordered","hover","colSpan","min","background","heading","Banker","turn","buttons","turnvariable","font","weight","criticalsec","shadow","critical","btndata","criticalsection","buttondiv","Turn","Flag","buttonid","display","gridTemplateColumns","App","exact","path","component","Petrson","Dom","render"],"mappings":"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","file":"static/js/main.ec6cdc14.chunk.js","sourcesContent":["import React from 'react'\r\n//import Button from 'react-bootstrap/Button';\r\n// import Image from 'react-bootstrap/Image'\r\nimport Card from 'react-bootstrap/Card';\r\nconst cardstyle={\r\n  width: '18rem',\r\n  fontSize: \"larger\",\r\n  margin: \"0.2cm\",\r\n  marginTop: \"0.2cm\",\r\n  backgroundColor: \"rgb(41,42,44)\",\r\n  color: \"aqua\",\r\n  boder: \"2px solid black\",\r\n // float: \"left\",\r\n}\r\nfunction Drawcard(props){\r\n    return(\r\n        <>\r\n        <Card style={cardstyle} className=\"card\">\r\n  <Card.Body>\r\n    <Card.Title>{props.title}</Card.Title>\r\n    <Card.Subtitle className=\"mb-2 text-muted\">{props.topic}</Card.Subtitle>\r\n    <Card.Text>\r\n        {props.dis}\r\n    </Card.Text>\r\n    <a href={props.cardlink}>Card Link</a>\r\n  </Card.Body>\r\n</Card>\r\n        </>\r\n    )\r\n}\r\nexport default Drawcard","import React from 'react'\r\nimport './main.css'\r\nimport Card from './Drawcard'\r\n// import {Route,Switch} from 'react-router-dom'\r\n// import Bsem from '../Binary/Bsem'\r\n//import Leftarrow from './leftarrow.png'\r\n// import Rightarrow from './rightarrow.png'\r\n//import Leftbtn from './Leftbtn'\r\n// import Straight from './str.png' \r\nfunction Main(){\r\n        return(\r\n        <>\r\n        {/* <Switch> */}\r\n                {/* <Route path='/' component={Card} /> */}\r\n        <div className=\"heading\">\r\n                ConCurrency Control & DeadLock                \r\n        </div>\r\n        <div className=\"flex-container\">\r\n        <Card topic=\"Concurrency control\" \r\n                title=\"TSL Variable\" \r\n        dis=\"TSL stands for Test Set Lock Mechanism\r\n        In lock variable mechanism, Sometimes Process reads the old value of lock variable and enters the critical section. Due to this reason, more than one process might get into critical section. However, the code shown in the part one of the following section can be replaced with the code shown in the part two. This doesn't affect the algorithm but, by doing this, we can manage to provide the mutual exclusion to some extent but not completely.\"\r\n        cardlink=\"/tsl/Tsl\"\r\n        />\r\n        <Card topic=\"Concurrency control\"\r\n                cardlink=\"turn\"\r\n                title=\"Turn Variable\"\r\n        dis=\"Turn Variable or Strict Alternation Approach is the software mechanism implemented at user mode. It is a busy waiting solution which can be implemented only for two processes. In this approach, A turn variable is used which is actually a lock.\r\n        This approach can only be used for only two processes.\"/>\r\n        <Card topic=\"Concurrency control\" \r\n                cardlink=\"petrson\"\r\n                title=\"Paterson Solution\"\r\n        dis=\"This is a software mechanism implemented at user mode. It is a busy waiting solution can be implemented for only two processes. It uses two variables that are turn variable and interested variable.\"/>\r\n         <Card topic=\"Concurrency control\" \r\n                title=\"Counting Semaphore\"\r\n                cardlink=\"/counting/Counting\"\r\n        dis=\"Its value can range over an unrestricted domain. It is used to control access to a resource that has multiple instances. \"/>        \r\n                       {/* <tr> */}\r\n        </div>\r\n        <div className=\"flex-container\">\r\n        \r\n        <Card topic=\"Concurrency control\" \r\n                title=\"Binary Semaphore\"\r\n                cardlink=\"/Binary/Bsem\"\r\n        dis=\"This is also known as mutex lock. It can have only two values – 0 and 1. Its value is initialized to 1. It is used to implement the solution of critical section problem with multiple processes. \"\r\n        \r\n        />\r\n\r\n        <Card topic=\"DeadLock\" \r\n                title=\"Bankers Algorithm\"\r\n                cardlink=\"banker\" \r\n        dis=\"The banker’s algorithm is a resource allocation and deadlock avoidance algorithm that tests for safety by simulating the allocation for predetermined maximum possible amounts of all resources, then makes an “s-state” check to test for possible activities, before deciding whether allocation should be allowed to continue.\"/>\r\n        <Card topic=\"Concurrency control\"\r\n                cardlink=\"Pc\"\r\n                title=\"Producer & consumer Problem\"\r\n        dis=\"Problem:\r\n        We have a buffer of fixed size. A producer can produce an item and can place in the buffer. A consumer can pick items and can consume them. We need to ensure that when a producer is placing an item in the buffer, then at the same time consumer should not consume any item. In this problem, buffer is the critical section.\"/>\r\n                        {/* </tr> */}\r\n        {/* <Bsem /> */}\r\n        </div>\r\n       {/* </Switch> */}\r\n        </>\r\n        )\r\n}\r\nexport default Main","import React from 'react'         \r\nimport './bsem.css'\r\nlet sema = new Semaphore(1);\r\n\r\nfunction Semaphore(max) {\r\n    var counter = 0;\r\n    var waiting = [];\r\n    \r\n    var take = function() {\r\n    if (waiting.length > 0 && counter < max){\r\n        counter++;\r\n        let promise = waiting.shift();\r\n        promise.resolve();\r\n    }\r\n    }\r\n    \r\nthis.acquire = function() {\r\n    if(counter < max) {\r\n        counter++\r\n        return new Promise(resolve => {\r\n        resolve();\r\n    });\r\n    } else {\r\n        return new Promise((resolve, err) => {\r\n        waiting.push({resolve: resolve, err: err});\r\n        });\r\n    }\r\n    }\r\n\r\nthis.release = function() {\r\n    counter--;\r\n    take();\r\n    }\r\n    \r\nthis.purge = function() {\r\n    let unresolved = waiting.length;\r\n    \r\n    for (let i = 0; i < unresolved; i++) {\r\n        waiting[i].err('Task has been purged.');\r\n    }\r\n    \r\n    counter = 0;\r\n    waiting = [];\r\n    \r\n    return unresolved;\r\n    }\r\n}\r\n\r\n// testing the semaphore\r\n\r\nfunction get_value()\r\n{\r\n    let processes=document.getElementById(\"tx2\").value;\r\n\r\n    async function test(id) {\r\n            console.log(\"Queuing\");\r\n            createQueue(id);\r\n        try {\r\n        await sema.acquire();\r\n        console.log('running task', id);\r\n        let deletequeue=document.getElementById(\"deletequeue\");\r\n        deletequeue.remove();\r\n        createRun(id);\r\n        setTimeout(() => {\r\n        sema.release();\r\n        console.log('task finished : ', id);\r\n        let deleterun=document.getElementById(\"deleterun\");\r\n        deleterun.remove();\r\n        createFinish(id);\r\n        }, 2000);\r\n        } catch (e) {\r\n        console.error(id, e);\r\n        }\r\n    }\r\n\r\n    for(var i=1;i<=processes;i++)\r\n    {\r\n        test(i);\r\n    }\r\n      //  document.getElementById(\"tx2\").disable=false;         \r\n}    \r\nfunction createQueue(id)\r\n{\r\n    let queue=document.createElement(\"button\");\r\n    queue.id=\"deletequeue\"\r\n    let qdiv=document.getElementById(\"qdiv\");\r\n    qdiv.appendChild(queue)\r\n    // document.body.appendChild(queue);\r\n    queue.className=\"draw\";\r\n    try {\r\n        queue.innerHTML=` Queue P${id}`;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\nfunction createRun(id)\r\n{\r\n    let run=document.createElement(\"button\");\r\n    let rdiv=document.getElementById(\"rdiv\");\r\n    rdiv.appendChild(run)\r\n    // document.body.appendChild(run);\r\n    run.className=\"draw\";\r\n    run.id=\"deleterun\"\r\n    try {\r\n        run.innerHTML=` Running P${id}`;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\nfunction createFinish(id)\r\n{\r\n    let fin=document.createElement(\"button\");\r\n    let fdiv=document.getElementById(\"fdiv\");\r\n    fdiv.appendChild(fin)\r\n    // document.body.appendChild(fin);\r\n    fin.className=\"draw\";\r\n    fin.id=\"deletefin\";\r\n    try {\r\n        fin.innerHTML=`Fin P${id}`;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\nfunction clearall(){\r\n    var val=document.getElementById(\"tx2\").value;\r\n    for(let t=0;t<=val;t++)\r\n    {\r\n        try {\r\n            var deletefin=document.getElementById(\"deletefin\");\r\n        deletefin.remove();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}   \r\n    const divstyle={\r\n        width: \"70rem\",\r\n         height: \"8rem\",\r\n        border: \"0.2rem solid black\",\r\n        margin: \"2rem\",\r\n    }\r\n    const cardstyle={\r\n        width: \"20rem\",\r\n        margin: \"2rem\"\r\n    }\r\nfunction Bsem(){\r\n    return(\r\n        <>\r\n            <div class=\"card text-white bg-dark mb-3\" style={cardstyle}>\r\n  <div class=\"card-header\">Binary Semaphore</div>\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">Enter the number of process</h5>\r\n    <input type=\"number\" id=\"tx2\" style={{margin: \"1rem\"}}/>\r\n    <button id=\"btn\" onClick={get_value} style={{margin: \"1rem\", borderRadius: \"0.2rem\"}}>Submit</button>\r\n        <button onClick={clearall}>clear</button>\r\n  </div>\r\n</div>\r\n\t\t<div id=\"qdiv\" style={divstyle}>Queue State</div>\r\n        <div id=\"rdiv\" style={divstyle}>Running state</div>\r\n        <div id=\"fdiv\" style={divstyle}> Finish state</div>\r\n        </>\r\n    )\r\n}\r\nexport default Bsem","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nfunction Tslinfocard(){\r\n    const style={\r\n        width: '70rem',\r\n        height: 'auto',\r\n        backgroundColor: 'white',\r\n        border: '0.2rem solid white',\r\n        marginLeft: '2rem',\r\n        marginTop:  '2rem',\r\n        boxShadow: '0.2rem 0.2rem 0.2rem 0.2rem grey',\r\n        fontFamily: 'Arial, Helvetica, sans-serif',\r\n        fontSize: '1.5rem',\r\n        padding: '0.2rem'\r\n    }\r\n    return(\r\n        <>\r\n        <Card style={style}>\r\n  <Card.Body >\r\n    <Card.Title style={{fontWeight: \"bold\"}}>Lock Variable Synchronization Mechanism</Card.Title>\r\n    <Card.Subtitle className=\"mb-2 text-muted\">TSL(Test And Set Lock)</Card.Subtitle>\r\n    <Card.Text>\r\n    <p>A lock variable provides the simplest synchronization mechanism for processes. Some noteworthy points regarding Lock Variables are-\r\n    </p>\r\n    <ol>\r\n    <li>Its a software mechanism implemented in user mode, i.e. no support required from the Operating System.</li> \r\n    <li>Its a busy waiting solution (keeps the CPU busy even when its technically waiting).</li> \r\n    <li>It can be used for more than two processes.</li> \r\n    </ol>\r\n\r\nWhen Lock = 0 implies critical section is vacant (initial value ) and Lock = 1 implies critical section occupied.\r\n\r\nThe pseudocode looks something like this –\r\n<Card style={{ width: '60rem', backgroundColor: 'rgb(200, 200, 200)',borderRadius: '1rem',margin: \"0.2rem\"}}>\r\n  <Card.Body>\r\n    <Card.Text>\r\n        <p>Entry section - while(lock != 0);</p>\r\n        <p>       Lock = 1;     </p>\r\n        <p>//critical section  </p>\r\nExit section - Lock = 0;\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\nHere we can see a classic implementation of the reader-writer’s problem. \r\nThe buffer here is the shared memory and many processes are either\r\ntrying to read or write a character to it.\r\n <p>\r\n To prevent any ambiguity of data we restrict concurrent access by\r\n  using a lock variable. We have also applied a constraint on the\r\n   number of readers/writers that can have access.\r\n </p>\r\n   <p>Now every Synchronization mechanism is judged on the basis of three primary parameters :</p>\r\n    <ol className=\"list\">\r\n        <li>Mutual Exclusion.</li>\r\n       <li> Progress.</li>\r\n       <li> Bounded Waiting.</li>\r\n    </ol>\r\n\r\n<p>\r\nOf which mutual exclusion is the most important of all parameters.\r\n The Lock Variable doesn’t provide mutual exclusion in some cases.\r\n  This fact can be best verified by writing its pseudo-code in the \r\n  form of an assembly language code as given below.\r\n</p>\r\n<Card style={{ width: '60rem', backgroundColor: 'rgb(200, 200, 200)',borderRadius: '1rem' , margin: \"0.2rem\"}}>\r\n  <Card.Body>\r\n    <Card.Text>\r\n        <ol>\r\n    <li>Load Lock, R0 ; (Store the value of Lock in Register R0.)</li>\r\n <li>CMP R0, #0 ; (Compare the value of register R0 with 0.)</li>\r\n<li> JNZ Step 1 ; (Jump to step 1 if value of R0 is not 0.)</li>\r\n <li>Store #1, Lock ; (Set new value of Lock as 1.)</li>\r\n<li>Enter critical section</li>\r\n <li>Store #0, Lock ; (Set the value of lock as 0 again.)</li>\r\n        </ol>\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n\r\n<p>Now let’s suppose that processes P1 and P2 are competing for Critical Section and their sequence of execution be as follows (initial alue of Lock = 0) –</p>\r\n<ol>  \r\n<li>P1 executes statement 1 and gets pre-empted.</li>\r\n<li>P2 executes statement 1, 2, 3, 4 and enters Critical Section and gets pre-empted.</li>\r\n<li>P1 executes statement 2, 3, 4 and also enters Critical Section.</li>\r\n</ol>\r\n<Card.Link href=\"https://www.geeksforgeeks.org/lock-variable-synchronization-mechanism/\">Article Link</Card.Link>\r\n    </Card.Text>\r\n  </Card.Body>\r\n</Card>\r\n        </>\r\n    )\r\n}\r\nexport default Tslinfocard","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\n\r\n\r\n\r\nconst cardstyle={\r\n    margin: '2rem',\r\n    width: '70rem',\r\n    // border: \"0.2rem solid black\",\r\n    boxShadow: '0.2rem 0.2rem 0.2rem 0.2rem grey',\r\n    backgroundColor: \"\",\r\n    color: 'black',\r\n    fontFamily:'Roboto, sans-serif',\r\n\r\n}\r\nconst btnstyle={\r\n    margin: '1rem',\r\n    width: '7rem',\r\n    height: '7rem',\r\n    backgroundColor: '#e7e7e7',\r\n    borderRadius: '1rem',\r\n}\r\nconst divstyle={\r\n    width: '70rem',\r\n    // border: '0.1rem soli',\r\n    margin: '2rem',\r\n    boxShadow: '0.2rem 0.2rem 0.2rem 0.2rem grey',\r\n    fontFamily:'Roboto, sans-serif',\r\n    fontWeight: 'bold',\r\n    borderRadius: '0.5rem'\r\n    \r\n}\r\nlet lock=1;\r\nfunction process(event){\r\n    const   idn = event.target.id;\r\n    const pro=document.getElementById(idn);\r\n    const time=Math.floor(Math.random()*10000);\r\n    const timetodisplay=time/1000;\r\n    document.getElementById(\"time\").innerHTML=\"This Process Take \"+timetodisplay+\"Sec\"\r\n    if(lock!==0)\r\n    {\r\n        // console.log(lock)\r\n        lock=1;\r\n        document.getElementById(\"criticalsectiondiv\").appendChild(pro);\r\n        // console.log(lock)\r\n         setTimeout(function(){ \r\n        // alert(\"Hello\"); \r\n        lock=1;\r\n        // console.log(lock)\r\n        document.getElementById(\"time\").innerHTML=\"\"\r\n         document.getElementById(\"backdiv\").appendChild(pro);\r\n     }, time);\r\n//    0=false 1=true\r\n        lock=0;\r\n    }\r\n    else\r\n    {\r\n        alert(\"1 process is using critical section\")\r\n    }\r\n    //lock=1;\r\n   // console.log(lock)\r\n}\r\n\r\nfunction Gui(){\r\n    // try {\r\n    //     document.getElementById(\"p1\").onclick=process\r\n    // document.getElementById(\"p2\").onclick=process\r\n    // document.getElementById(\"p3\").onclick=process\r\n    // document.getElementById(\"p4\").onclick=process\r\n    // } catch (error) {\r\n        \r\n    // }\r\n    \r\n    return(\r\n        <>\r\n        <Card style={cardstyle} id=\"backdiv\">\r\n            <Card.Body>\r\n                <Card.Title>No of process</Card.Title>\r\n                {/* <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle> */}\r\n                <button style={btnstyle} onClick={process} id=\"p1\">P1</button>\r\n                <button style={btnstyle} onClick={process} id=\"p2\">P2</button>\r\n                <button style={btnstyle} onClick={process} id=\"p3\">P3</button>\r\n                <button style={btnstyle} onClick={process} id=\"p4\">P4</button>\r\n            </Card.Body>\r\n        </Card>\r\n        <h3 style={{margin: \"2rem\"}}>Critical section</h3>\r\n        <h3 id=\"time\" style={{margin: '2rem'}}> </h3>\r\n        <div style={divstyle} id=\"criticalsectiondiv\">\r\n        \r\n        </div>\r\n        \r\n       \r\n    </>\r\n    );\r\n}\r\nexport default Gui","import React from 'react'\r\nimport Tslinfocard from './Tslinfocard'\r\nimport Gui from './Gui'\r\nfunction Tsl(){\r\n    return(\r\n        <>\r\n        <Tslinfocard />\r\n        <Gui />\r\n        {/* <h1>how are yuo</h1> */}\r\n        </>\r\n    )\r\n}\r\nexport default Tsl","import React from 'react'; \r\n//import Temp from './Temp' \r\nimport './csem.css';   \r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\n// import FormControl from 'react-bootstrap/Form'\r\nfunction Semaphore(max) {\r\n    var counter = 0;\r\n    var waiting = [];\r\n    \r\n    var take = function() {\r\n    if (waiting.length > 0 && counter < max){\r\n        counter++;\r\n        let promise = waiting.shift();\r\n        promise.resolve();\r\n    }\r\n    }\r\n    \r\nthis.acquire = function() {\r\n    if(counter < max) {\r\n        counter++\r\n        return new Promise(resolve => {\r\n        resolve();\r\n    });\r\n    } else {\r\n        return new Promise((resolve, err) => {\r\n        waiting.push({resolve: resolve, err: err});\r\n        });\r\n    }\r\n    }\r\n\r\nthis.release = function() {\r\n    counter--;\r\n    take();\r\n    }\r\n    \r\nthis.purge = function() {\r\n    let unresolved = waiting.length;\r\n    \r\n    for (let i = 0; i < unresolved; i++) {\r\n        waiting[i].err('Task has been purged.');\r\n    }\r\n    \r\n    counter = 0;\r\n    waiting = [];\r\n    \r\n    return unresolved;\r\n    }\r\n}\r\n\r\n// testing the semaphore\r\n\r\nfunction get_value()\r\n{\r\n    let processes=0\r\n    let max=0\r\n    let sema=null\r\n    try {\r\n    processes=document.getElementById(\"tx2\").value;\r\n    max=document.getElementById(\"tx1\").value;\r\n     sema= new Semaphore(max);\r\n    } catch (error) {\r\n        \r\n    }\r\n\r\n    async function test(id) {\r\n        console.log('queueing task', id);\r\n        createQueue(id)\r\n        try {\r\n        await sema.acquire();\r\n        console.log('running task', id);\r\n        try {\r\n            var deletequeue=document.getElementById(\"deletequeue\")\r\n        deletequeue.remove();\r\n        } catch (error) {\r\n            \r\n        }\r\n        createRun(id)\r\n        setTimeout(() => {\r\n        sema.release();\r\n        console.log('task finished : ', id);\r\n        try {\r\n                var deleterun=document.getElementById(\"deleterun\");\r\n                deleterun.remove()\r\n        } catch (error) {\r\n            \r\n        }\r\n        createFinish(id)\r\n        }, 2000);\r\n        } catch (e) {\r\n        console.error(id, e);\r\n        }\r\n    }\r\n\r\n    for(var i=1;i<=processes;i++)\r\n    {\r\n        test(i);\r\n    }\r\n                    \r\n}     \r\nfunction createQueue(id)\r\n{\r\n    let queue=document.createElement(\"button\");\r\n    queue.id=\"deletequeue\"\r\n    let qdiv=document.getElementById(\"qdiv\");\r\n    qdiv.appendChild(queue)\r\n    // document.body.appendChild(queue);\r\n    queue.className=\"draw\";\r\n    try {\r\n        queue.innerHTML=` Queue P${id}`;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\nfunction createRun(id)\r\n{\r\n    let run=document.createElement(\"button\");\r\n    let rdiv=document.getElementById(\"rdiv\");\r\n    rdiv.appendChild(run)\r\n    // document.body.appendChild(run);\r\n    run.className=\"draw\";\r\n    run.id=\"deleterun\"\r\n    try {\r\n        run.innerHTML=` Running P${id}`;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\nfunction createFinish(id)\r\n{\r\n    let fin=document.createElement(\"button\");\r\n    let fdiv=document.getElementById(\"fdiv\");\r\n    fdiv.appendChild(fin)\r\n    // document.body.appendChild(fin);\r\n    fin.className=\"draw\";\r\n    fin.id=\"deletefin\";\r\n    try {\r\n        fin.innerHTML=`Fin P${id}`;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\nfunction clearall(){\r\n    var val=document.getElementById(\"tx2\").value;\r\n    for(let t=0;t<=val;t++)\r\n    {\r\n        try {\r\n            var deletefin=document.getElementById(\"deletefin\");\r\n        deletefin.remove();\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\n    const divstyle={\r\n        width: \"70rem\",\r\n        height: \"8rem\",\r\n        border: \"0.2rem black solid\",\r\n        margin: \"1rem\"\r\n    }\r\n    const cardstyle={\r\n        width: \"70rem\",\r\n        border: \"0.2rem solid black\",\r\n        margin: \"1rem\",\r\n        padding: \"1rem\",\r\n        \r\n    }\r\nfunction Csem(){\r\n    \r\n    return(\r\n        <>\r\n            <Card style={cardstyle}>\r\n  <Card.Body>\r\n    <Card.Title>Counting Semaphore</Card.Title>\r\n    <Card.Subtitle className=\"mb-2 text-muted\">Information Card</Card.Subtitle>\r\n    <Card.Text>\r\n    a semaphore is a nonnegative integer count. Semaphores are typically used to coordinate access to resources, with the semaphore count initialized to the number of free resources.\r\n    </Card.Text>\r\n    <Card.Link href=\"https://docs.oracle.com/cd/E19455-01/806-5257/sync-34/index.html\">Article Link</Card.Link>\r\n    <Card.Link href=\"https://www.geeksforgeeks.org/semaphores-in-process-synchronization/\">Reference Link</Card.Link>\r\n  </Card.Body>\r\n</Card>\r\n<Card style={cardstyle}>\r\n  <Card.Body>\r\n       {/* label */}\r\n  <InputGroup size=\"sm\" style={{margin: \"1rem\"}}>\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"inputGroup-sizing-lg\">Enter The Value Of Semaphore</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n  </InputGroup>\r\n        {/* input field */}\r\n          <input type=\"number\" id=\"tx1\" style={{margin: \"1rem\"}} />\r\n          {/* label */}\r\n          <InputGroup size=\"sm\" style={{margin: \"1rem\"}}>\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"inputGroup-sizing-lg\"> Enter The Number Of Process </InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n  </InputGroup>\r\n            {/* input field */}\r\n          <input type=\"number\" id=\"tx2\" style={{margin: \"1rem\"}}/>\r\n        {/* buttons */}\r\n          <Button variant=\"dark\" onClick={get_value} style={{margin: \"1rem\"}} id=\"btn\">Submit</Button>{' '}\r\n          <Button variant=\"dark\" onClick={clearall} style={{margin: \"1rem\"}}>clearall</Button>{' '}\r\n  </Card.Body>\r\n</Card>\r\n        {/* <Temp /> */}\r\n        <div id=\"qdiv\" style={divstyle}>Queue State</div>\r\n        <div id=\"rdiv\" style={divstyle}>Running State</div>\r\n        <div id=\"fdiv\" style={divstyle}>Finish State</div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Csem","import React from 'react'\r\nimport Csem from './Csem'\r\nfunction Counting()\r\n{\r\n    return(\r\n        <>\r\n        <Csem />\r\n        </>\r\n    )\r\n}\r\nexport default Counting","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nconst header={\r\n    width: \"auto\",\r\n    border: \"0.2rem solid black\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"aqua\"\r\n}\r\nconst card={\r\n    width: \"auto\",\r\n    backgroundColor: \"rgb(41,41,44)\",\r\n    color: \"white\",\r\n    margin: \"2rem\",\r\n}\r\nconst button={\r\n    width: \"30%\",\r\n    height: \"5rem\",\r\n    marginLeft: \"12.5%\",\r\n    textAlign: \"center\",\r\n    // border: \"o.1rem solid black\"\r\n\r\n}\r\nconst buffer={\r\n    width: \"15%\",\r\n    height: \"2rem\",\r\n    margin: \"1rem\",\r\n    textAlign: \"center\",\r\n    border: \"0.2rem solid aqua\",\r\n    color: \"white\",\r\n    // float: \"left\"\r\n}\r\nconst variable={\r\n   width: \"20%\",\r\n    height: \"2rem\",\r\n    margin: \"1rem\",\r\n    textAlign: \"center\",\r\n    border: \"0.2rem solid aqua\",\r\n    color: \"white\",\r\n    float: \"left\"\r\n}\r\nlet ids=0\r\nlet arr=['a','a','a','a','a','a'];\r\nlet full=0\r\nlet Empty=6;\r\nlet count=0;\r\nfunction produce()\r\n{\r\n  const alpha=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n  let rand=Math.floor(Math.random()*100)\r\n  let char=rand%26;\r\n  let data=alpha.charAt(char);\r\n  \r\n  // console.log(count)\r\n  for(let i=0;i<arr.length;i++)\r\n  {\r\n      if(arr[i]!=='a')\r\n      {\r\n        count=count+1\r\n      }\r\n\r\n  }\r\n  //  console.log(count)\r\n   full=count\r\n  //  console.log(full,count)\r\n  if(full<6)\r\n  {\r\n    const h3=document.createElement(\"h3\")\r\n  const buffers=document.getElementById(\"buffer\");\r\n  h3.innerHTML=data;\r\n  h3.style={buffer}\r\n  let ID=h3.id=`p${ids}`\r\n  buffers.appendChild(h3)\r\n  arr.splice(ids,1,ID)\r\n  // console.log(arr)\r\n  full=ids+1\r\n  Empty=Empty-1;\r\n  let checkf=document.getElementById(\"checkfull\");\r\n  checkf.innerHTML=`Full : ${count+1}`\r\n  let checke=document.getElementById(\"checkempty\");\r\n  checke.innerHTML=`Empty : ${Empty}`\r\n  // console.log(\"full\"+full,\"empty\"+Empty)\r\n  ids=ids+1;\r\n  }\r\n  else{\r\n    alert(\"only 6 value\")\r\n  }\r\n  count=0;\r\n}\r\n// console.log(full,count)\r\nlet index=0;\r\nfunction consume()\r\n{\r\n  for(let i=0;i<arr.length;i++)\r\n  {\r\n      if(arr[i]!=='a')\r\n      {\r\n        count=count+1\r\n      }\r\n\r\n  }\r\n    if(Empty<6)\r\n    {\r\n      let d=arr.splice(index,1)\r\n    index=index+1;\r\n    full=full-1\r\n    Empty=Empty+1\r\n    // checkdata=6-full;\r\n    let checkf=document.getElementById(\"checkfull\");\r\n  checkf.innerHTML=`Full : ${count-1}`\r\n  let checke=document.getElementById(\"checkempty\");\r\n  checke.innerHTML=`Empty : ${Empty}`\r\n    // console.log(\"full\"+full,\"empty\"+Empty)\r\n    index=index-1\r\n   let consumedata= document.getElementById(d)\r\n   consumedata.remove();\r\n    }\r\n    else\r\n    {\r\n      alert(\"no more data available\")\r\n    }\r\n    count=0\r\n}\r\n// try {\r\n//   let checkf=document.getElementById(\"checkfull\");\r\n//    checkf.innerHTML+=` : ${full}`\r\n// } catch (error) {\r\n  \r\n// }\r\nfunction Pc(){\r\n        return(\r\n            <>\r\n            <div style={header}>\r\n                <h3>Producer Consumer Problem</h3>\r\n            </div>\r\n            <Card border=\"aqua\" style={card}>\r\n    <Card.Header>Producer & Consumer Problem</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>What Is The Problem ? </Card.Title>\r\n      <Card.Text style={{margin: \"1rem\"}}>\r\n      We have a buffer of fixed size. A producer can produce an item and can place in the buffer. \r\n      A consumer can pick items and can consume them. We need to ensure that when a producer is placing an\r\n       item in the buffer, then at the same time consumer should not consume any item. In this problem, buffer is the critical section.\r\n      </Card.Text>\r\n      <a href=\"https://www.geeksforgeeks.org/producer-consumer-problem-using-semaphores-set-1/\">Refrence Link</a>\r\n    </Card.Body>\r\n  </Card>\r\n            \r\n  <Card border=\"aqua\" style={card}>\r\n    <Card.Header>Producer & Consumer Problem</Card.Header>\r\n    <Card.Body>\r\n      <Card.Title>How To Solve ? </Card.Title>\r\n      <Card.Text style={{margin: \"1rem\"}}>\r\n      To solve this problem, we need two counting semaphores – Full and Empty. “Full” keeps track of number of items in the buffer at any given time and “Empty” keeps track of number of unoccupied slots.\r\n      </Card.Text>\r\n      <a href=\"https://www.geeksforgeeks.org/producer-consumer-problem-using-semaphores-set-1/\">Refrence Link</a>\r\n    </Card.Body>\r\n  </Card>\r\n  <br />\r\n            <Button variant=\"success\" style={button} onClick={produce}>Producer</Button>\r\n            <Button variant=\"info\"style={button} onClick={consume}>Consumer</Button>\r\n\r\n\r\n    <Card style={{margin: \"2rem\",border: \"0.2rem solid aqua\",backgroundColor: \"rgb(41,41,44)\"}}>\r\n  <Card.Body>\r\n            <div style={{color: \"white\"}} id=\"buffer\">Buffer/Memory (Size: 5(0-4))</div>\r\n            {/* <div style={buffer}></div>\r\n            <div style={buffer}></div>\r\n            <div style={buffer}></div>\r\n            <div style={buffer}></div>\r\n            <div style={buffer}></div> */}\r\n            </Card.Body>\r\n</Card>\r\n<Card style={{margin: \"2rem\",border: \"0.2rem solid aqua\",backgroundColor: \"rgb(41,41,44)\"}}>\r\n  <Card.Body>\r\n            <div style={{color: \"white\"}}>Semaphores (Shared Variable)</div>\r\n          <div style={variable} id=\"checkfull\">Full </div>\r\n            <div style={variable} id=\"checkempty\">Empty </div>\r\n            </Card.Body>\r\n</Card>\r\n            </>\r\n        )\r\n}\r\nexport default Pc\r\n","import React from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Card from  'react-bootstrap/Card'\r\nimport Button from  'react-bootstrap/Button'\r\n// import {Alert} from 'react-bootstrap'\r\nconst table1={\r\n    width: \"50%\",\r\n    margin: \"1rem\",\r\n    border: \"0.3rem solid black\"\r\n}\r\nconst infocard={\r\n    width: \"38%\",\r\n    float: \"right\",\r\n    margin: \"1rem\",\r\n    border: \"0.1rem solid black\",\r\n    fontSize: \"1.2rem\",\r\n    // padding: \"0.2rem\"\r\n    \r\n}\r\nconst table={\r\n  width: \"50%\",\r\n  margin: \"1rem\",\r\n  border: \"0.3rem solid black\"\r\n}\r\nconst smalltable={\r\n  width: \"35%\",\r\n  float: \"right\",\r\n  margin: \"1rem\",\r\n  // border: \"0.3rem solid black\",\r\n  fontSize: \"1rem\",\r\n  // padding: \"0.2rem\"\r\n  \r\n}\r\nlet idarr=[0,0,0,0,0,0,0,0,0]\r\nlet alloarr=[0,0,0,0,0,0,0,0,0]\r\nlet sysmax=[0,0,0]\r\nlet avail=[0,0,0]\r\nlet currentneed=[0,0,0,0,0,0,0,0,0]\r\nfunction autofill(){\r\n  idarr[1]=7\r\n  idarr[2]=5\r\n  idarr[3]=3\r\n  idarr[4]=3\r\n  idarr[5]=2\r\n  idarr[6]=2\r\n  idarr[7]=9\r\n  idarr[8]=0\r\n  idarr[9]=2\r\n  alloarr[1]=0\r\n  alloarr[2]=1\r\n  alloarr[3]=0\r\n  alloarr[4]=2\r\n  alloarr[5]=0\r\n  alloarr[6]=0\r\n  alloarr[7]=3\r\n  alloarr[8]=0\r\n  alloarr[9]=2\r\n  sysmax[1]=10\r\n  sysmax[2]=5\r\n  sysmax[3]=7\r\n  for(let i=0;i<idarr.length;i++)\r\n  {\r\n    try {\r\n      let temp2=`a${i}`\r\n      let temp=`m${i}`;\r\n    let ids=document.getElementById(temp);\r\n    let ids2=document.getElementById(temp2);\r\n    ids.value=idarr[i]\r\n    ids2.value=alloarr[i];\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n  for(let j=0;j<sysmax.length;j++)\r\n  {\r\n    try {\r\n      let temp3=`max${j}`\r\n      let ids3=document.getElementById(temp3)\r\n      ids3.value=sysmax[j]\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n}\r\nfunction giveid(){\r\n      for(let i=0;i<idarr.length;i++)\r\n      {\r\n        try {\r\n          let allo=`a${i+1}`\r\n          let maxneed=`m${i+1}`\r\n        let data=parseInt(document.getElementById(maxneed).value)\r\n        let allodata=parseInt(document.getElementById(allo).value)\r\n        // document.getElementById(temp).innerHTML=data\r\n        idarr[i]=data\r\n        alloarr[i]=allodata\r\n        } catch (error) {\r\n          \r\n        }\r\n      }\r\n      for(let j=0;j<sysmax.length;j++)\r\n      {\r\n        try {\r\n          let systemmax=`max${j+1}`\r\n          sysmax[j]=parseInt(document.getElementById(systemmax).value)\r\n        } catch (error) {\r\n          \r\n        }\r\n      }\r\n      // console.log(idarr)\r\n      // console.log(alloarr)\r\n      // console.log(sysmax)\r\n      avail[0]=sysmax[0]-(alloarr[0]+alloarr[3]+alloarr[6])\r\n      avail[1]=sysmax[1]-(alloarr[1]+alloarr[4]+alloarr[7])\r\n      avail[2]=sysmax[2]-(alloarr[2]+alloarr[5]+alloarr[8])\r\n      for(let i=0;i<currentneed.length;i++)\r\n      {\r\n        currentneed[i]=idarr[i]-alloarr[i]\r\n      }\r\n      // console.log(currentneed)\r\n      // console.log(avail)\r\n     \r\n      document.getElementById(\"currentneed\").rows[2].cells[1].innerHTML=currentneed[0]\r\n      document.getElementById(\"currentneed\").rows[2].cells[2].innerHTML=currentneed[1]\r\n      document.getElementById(\"currentneed\").rows[2].cells[3].innerHTML=currentneed[2]\r\n      document.getElementById(\"currentneed\").rows[3].cells[1].innerHTML=currentneed[3]\r\n      document.getElementById(\"currentneed\").rows[3].cells[2].innerHTML=currentneed[4]\r\n      document.getElementById(\"currentneed\").rows[3].cells[3].innerHTML=currentneed[5]\r\n      document.getElementById(\"currentneed\").rows[4].cells[1].innerHTML=currentneed[6]\r\n      document.getElementById(\"currentneed\").rows[4].cells[2].innerHTML=currentneed[7]\r\n      document.getElementById(\"currentneed\").rows[4].cells[3].innerHTML=currentneed[8]\r\n      for(let i=0;i<3;i++)\r\n      {\r\n        document.getElementById(\"availabletable\").rows[2].cells[i].innerHTML=avail[i]\r\n      }\r\n      let processarray=[\"p1\",\"p2\",\"p3\"];\r\n      let getprocess=[\"\",\"\",\"\"]\r\n      let f1=0\r\n      let inc=0\r\n      for(let j=0;j<3;j++)\r\n      { \r\n        // console.log(\"run\")\r\n        for(let i=0;i<3;i++)\r\n        {\r\n          // console.log(\"run inside\")\r\n          if(avail[0]>=currentneed[f1] && avail[1]>=currentneed[f1+1] && avail[2]>=currentneed[f1+2])\r\n        {\r\n            // console.log(f1)\r\n            if(processarray[i]!==\"0\")\r\n            {\r\n              // console.log(currentneed[f1],currentneed[f1+1],currentneed[f1+2])\r\n              avail[0]+=currentneed[f1]\r\n              avail[1]+=currentneed[f1+1]\r\n              avail[2]+=currentneed[f1+2]\r\n              // console.log(avail)\r\n              getprocess[inc]=processarray[i]\r\n              processarray[i]=\"0\"\r\n              inc++\r\n            }\r\n        }\r\n            f1=f1+3\r\n            if(f1>8)\r\n            {\r\n              f1=0\r\n            }\r\n        }\r\n      }\r\n        let count=0;\r\n        let seq=document.getElementById(\"finalcheck\")\r\n        for(let i=0;i<processarray.length;i++)\r\n        {\r\n          if(processarray[i]!==\"0\")\r\n          {\r\n            // console.log(\"not safe chance of deadlock\")\r\n            count++;\r\n          }\r\n          else\r\n          {\r\n            // console.log(\"safe\",getprocess)\r\n          }\r\n        }\r\n        if(count===0)\r\n        {\r\n          // console.log(\"getprocess\",getprocess)\r\n          \r\n          seq.innerHTML=`Its Safe Sequence ${getprocess}`\r\n          // console.log(\"processarray\",processarray)\r\n        }\r\n        else\r\n        {\r\n          seq.innerHTML=\"Its not safe chances of occuring deadlock\"\r\n          // console.log(\"deadlock\")\r\n          // <Alert>Chances Of Deadlock</Alert>\r\n        }\r\n}\r\nfunction Table1(){\r\n    return(\r\n        <>\r\n        <div>\r\n          {/* information card */}\r\n        <Card style={infocard} variant=\"dark\">\r\n        <Card.Title style={{textAlign: \"center\",border: \"0.1rem solid black,\",borderRadius:\"0.3rem\"}}>Information Card</Card.Title>\r\n        <Card.Body>Here R1 - R2 - R3 are the Three Resources Resource1\r\n        Resource2 Resource3 it can be anything like Memory💽,CPU🖥️,Printer🖨️,etc\r\n        Here P1 - P2 - P3 are the Three Processes Process1\r\n        Process2 Process3\r\n        {/* <p> Use Autofill Button </p> */}\r\n        </Card.Body></Card>\r\n        {/* available table */}\r\n        <Table striped bordered hover variant=\"dark\" style={table}>\r\n  <thead>\r\n      <tr>\r\n      <th colSpan=\"4\" style={{textAlign: \"center\"}}>Allocation</th>\r\n      </tr>\r\n    <tr>   \r\n      <th></th>\r\n      <th>R1</th>\r\n      <th>R2</th>\r\n      <th>R3</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>P1</td>\r\n      <td><input type=\"number\"style={{width: \"3rem\"}} id=\"a1\"/></td>\r\n      <td><input type=\"number\"style={{width: \"3rem\"}} id=\"a2\"/></td>\r\n      <td><input type=\"number\"style={{width: \"3rem\"}} id=\"a3\" /></td>\r\n    </tr>\r\n    <tr>\r\n      <td>P2</td>\r\n      <td><input type=\"number\"style={{width: \"3rem\"}} id=\"a4\"/></td>\r\n      <td><input type=\"number\"style={{width: \"3rem\"}} id=\"a5\"/></td>\r\n      <td><input type=\"number\"style={{width: \"3rem\"}} id=\"a6\"/></td>\r\n    </tr>\r\n    <tr>\r\n      <td>P3</td>\r\n      <td><input type=\"number\"style={{width: \"3rem\"}} id=\"a7\"/></td>\r\n      <td><input type=\"number\"style={{width: \"3rem\"}} id=\"a8\"/></td>\r\n      <td><input type=\"number\"style={{width: \"3rem\"}} id=\"a9\"/></td>\r\n    </tr>\r\n  </tbody>\r\n</Table>\r\n        </div>\r\n        <Table striped bordered hover variant=\"dark\" style={smalltable} id=\"availabletable\">\r\n          \r\n  <thead>\r\n      <tr>\r\n      <th colSpan=\"4\" style={{textAlign: \"center\"}}>Available</th>\r\n      </tr>\r\n    <tr>   \r\n      <th>R1</th>\r\n      <th>R2</th>\r\n      <th>R3</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td></td>\r\n      <td></td>\r\n      <td></td>\r\n    </tr>\r\n  </tbody>\r\n</Table>\r\n<Table striped bordered hover variant=\"dark\" style={table1}>\r\n          {/* Maxneed table */}\r\n  <thead> \r\n      <tr>\r\n      <th colSpan=\"4\" style={{textAlign: \"center\"}}>Max Need</th>\r\n      </tr>\r\n    <tr>   \r\n      <th></th>\r\n      <th>R1</th>\r\n      <th>R2</th>\r\n      <th>R3</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>P1</td>\r\n      <td><input max=\"10\" min=\"0\" type=\"number\"style={{width: \"3rem\"}} id=\"m1\" /></td>\r\n      <td><input max=\"10\" min=\"0\" type=\"number\"style={{width: \"3rem\"}} id=\"m2\"/></td>\r\n      <td><input max=\"10\" min=\"0\" type=\"number\"style={{width: \"3rem\"}} id=\"m3\"/></td>\r\n    </tr>\r\n    <tr>\r\n      <td>P2</td>\r\n      <td><input max=\"10\" min=\"0\" type=\"number\"style={{width: \"3rem\"}} id=\"m4\" /></td>\r\n      <td><input max=\"10\" min=\"0\" type=\"number\"style={{width: \"3rem\"}} id=\"m5\"/></td>\r\n      <td><input max=\"10\" min=\"0\" type=\"number\"style={{width: \"3rem\"}} id=\"m6\"/></td>\r\n    </tr>\r\n    <tr>\r\n      <td>P3</td>\r\n      <td><input max=\"10\" min=\"0\" type=\"number\"style={{width: \"3rem\"}} id=\"m7\" /></td>\r\n      <td><input max=\"10\" min=\"0\" type=\"number\"style={{width: \"3rem\"}} id=\"m8\" /></td>\r\n      <td><input max=\"10\" min=\"0\" type=\"number\"style={{width: \"3rem\"}} id=\"m9\" /></td>\r\n    </tr>\r\n  </tbody>\r\n</Table>\r\n        {/* system max table */}\r\n<Table striped bordered hover variant=\"dark\" style={smalltable}>\r\n  <thead>\r\n      <tr>\r\n      <th colSpan=\"4\" style={{textAlign: \"center\"}}>System Max</th>\r\n      </tr>\r\n    <tr>   \r\n      <th>R1</th>\r\n      <th>R2</th>\r\n      <th>R3</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td><input type=\"number\"style={{width: \"3rem\" }} id=\"max1\"/></td>\r\n      <td><input type=\"number\"style={{width: \"3rem\" }} id=\"max2\"/></td>\r\n      <td><input type=\"number\"style={{width: \"3rem\" }} id=\"max3\"/></td>\r\n    </tr>\r\n  </tbody>\r\n          {/* current table */}\r\n</Table>\r\n        <Table striped bordered hover variant=\"dark\" style={table1} id=\"currentneed\">\r\n  <thead>\r\n      <tr>\r\n      <th colSpan=\"4\" style={{textAlign: \"center\"}}>Current Need</th>\r\n      </tr>\r\n    <tr>   \r\n      <th></th>\r\n      <th>R1</th>\r\n      <th>R2</th>\r\n      <th>R3</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>P1</td>\r\n      <td></td>\r\n      <td></td>\r\n      <td></td>\r\n    </tr>\r\n    <tr>\r\n      <td>P2</td>\r\n      <td></td>\r\n      <td></td>\r\n      <td></td>\r\n    </tr>\r\n    <tr>\r\n      <td>P3</td>\r\n      <td></td>\r\n      <td></td>\r\n      <td></td>\r\n    </tr>\r\n  </tbody>\r\n</Table>\r\n        <Button onClick={autofill} variant=\"dark\" style={{width: \"10rem\",margin: \"2%\",marginLeft: \"25%\"}}>AutoFill</Button>\r\n        <Button onClick={giveid} variant=\"dark\" style={{width: \"10rem\",margin: \"2%\",marginLeft: \"25%\"}}>Submit</Button>\r\n        <h1 id=\"finalcheck\"style={{textAlign: \"center\",padding: \"0.2rem\",background: \"aqua\"}}></h1>\r\n        </>\r\n    )\r\n}\r\nexport default Table1","import React from 'react'\r\nimport Table1 from './tables/Table1'\r\nconst heading={\r\n    textAlign: \"center\",\r\n    backgroundColor: \"aqua\"\r\n}\r\nfunction Banker(){\r\n    return(\r\n        <>\r\n        <h1 style={heading}>Banker's Algorithm</h1>\r\n        <Table1 />\r\n        {/* <Table2 />\r\n        <Table3 /> */}\r\n        </>\r\n    )\r\n}\r\nexport default Banker","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nlet i=\"i\"\r\nlet j=\"j\"\r\nlet turn=i;\r\nconst heading={\r\n    height: \"3rem\",\r\n    backgroundColor: \"aqua\",\r\n    textAlign: \"center\",\r\n    // filter: \"invert(1)\"\r\n}\r\nconst buttons={\r\n    width: \"10rem\",\r\n    height: \"8rem\",\r\n    backgroundColor: \"aqua\",\r\n    border: \"0.3rem solid rgb(40,41,44)\",\r\n    margin: \"2%\"\r\n}\r\nconst turnvariable={\r\n    font: \"2rem\",\r\n    weight: \"bolder\",\r\n    border: \"0.3rem solid grey\"\r\n}\r\nconst criticalsec={\r\n    border: \"0.3rem solid grey\",\r\n    shadow: \"0.5rem 0.5rem grey\",\r\n    margin: \"2rem\"\r\n}\r\nconst table={\r\n    border: \"0.2rem solid black\",\r\n    marginLeft: \"20%\"\r\n}\r\nfunction critical(event)\r\n{\r\n        let button=document.getElementById(event.target.id)\r\n        let btndata=button.innerHTML\r\n        let criticalsection=document.getElementById(\"maindiv\")\r\n        let buttondiv=document.getElementById(\"buttondiv\")\r\n        let time=document.getElementById(\"time\")\r\n        // turn=true\r\n        if(turn===i)\r\n        {   \r\n            turn=j\r\n            time.innerHTML=`Turn variable: ${btndata}`\r\n            setTimeout(()=>{\r\n                setTimeout(()=>{\r\n                        buttondiv.appendChild(button)\r\n                        // console.log(turn)\r\n                        turn=i\r\n                        time.innerHTML=`Turn variable: ${btndata}`\r\n                },5000)\r\n                criticalsection.appendChild(button)\r\n                // criticalsection.remove(button)\r\n            },1000)\r\n        }\r\n        else\r\n        {\r\n            alert(\"Critical section not available\")\r\n        }\r\n        time.innerHTML=\"Turn variable:\"\r\n}\r\nfunction Turn(){\r\n    return(\r\n        <>\r\n            <h1 style={heading}>Turn Variable</h1>\r\n            <table style={table}>  \r\n                <tr>\r\n                    <th style={{padding: \"2rem\"}}>\r\n                    <div id=\"buttondiv\">\r\n            <button id=\"button1\" onClick={critical} style={buttons}> Process i</button>\r\n            {/* <button id=\"button2\" onClick={critical} style={buttons}> Process 2</button> */}\r\n            {/* <button onClick={clearInterval(stop)}>stop</button> */}\r\n            </div>\r\n                    </th>\r\n                    <th>\r\n                    <div id=\"buttondiv\">\r\n            {/* <button id=\"button1\" onClick={critical} style={buttons}> Process 1</button> */}\r\n            <button id=\"button2\" onClick={critical} style={buttons}> Process j</button>\r\n            {/* <button onClick={clearInterval(stop)}>stop</button> */}\r\n            </div>\r\n                    </th>\r\n                    <th>\r\n                    <Card style={{ width: '18rem',margin: '2rem' }}>\r\n  <Card.Body>\r\n    <Card.Title>Information Card</Card.Title>\r\n    <Card.Subtitle className=\"mb-2 text-muted\">Turn Variable</Card.Subtitle>\r\n    <Card.Text>\r\n        {/* <p>Turn Variable or Strict Alternation Approach</p> */}\r\n    Turn Variable or Strict Alternation Approach is the software mechanism implemented at user mode. It is a busy waiting solution which can be implemented only for two processes. In this approach, A turn variable is used which is actually a lock.\r\n    </Card.Text>\r\n    <Card.Link href=\"https://www.javatpoint.com/os-turn-variable-or-strict-alternation-approach\">More Info</Card.Link>\r\n    {/* <Card.Link href=\"#\">Another Link</Card.Link> */}\r\n  </Card.Body>\r\n</Card>\r\n                    </th>\r\n                    <th>\r\n                    <div style={{margin: \"1rem\",border: \"0.2rem solid black\"}}>\r\n                <ol>\r\n                    <li> Mutual Exclusion ✔️</li>\r\n                    <li> Process ❌</li>\r\n                    <li> Bound Waiting ✔️</li>\r\n                    <li> Portability ✔️</li>\r\n                </ol>\r\n            </div>\r\n                    </th>\r\n                </tr>\r\n            </table>\r\n            <div id=\"maindiv\" style={criticalsec}><h3>Critical Section</h3> </div>\r\n            <div style={turnvariable}><h5 id=\"time\">Turn variable: </h5></div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Turn","import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nlet turn=0;\r\nconst heading={\r\n    height: \"3rem\",\r\n    backgroundColor: \"aqua\",\r\n    textAlign: \"center\",\r\n    // filter: \"invert(1)\"\r\n}\r\nconst buttons={\r\n    width: \"10rem\",\r\n    height: \"8rem\",\r\n    backgroundColor: \"aqua\",\r\n    border: \"0.3rem solid rgb(40,41,44)\",\r\n    margin: \"3rem\"\r\n}\r\nconst turnvariable={\r\n    font: \"2rem\",\r\n    weight: \"bolder\",\r\n    border: \"0.3rem solid grey\"\r\n}\r\nconst criticalsec={\r\n    border: \"0.3rem solid grey\",\r\n    shadow: \"0.5rem 0.5rem grey\",\r\n    margin: \"2rem\"\r\n}\r\n// const table={\r\n//     border: \"0.2rem solid black\",\r\n//     marginLeft: \"20%\"\r\n// }\r\nlet Flag=[false,false];\r\nfunction critical(event)\r\n{\r\n        let buttonid=event.target.id\r\n        let button=document.getElementById(buttonid)\r\n        let criticalsection=document.getElementById(\"maindiv\")\r\n        let buttondiv=document.getElementById(\"buttondiv\")\r\n        let time=document.getElementById(\"time\")\r\n        // turn=true\r\n        if(buttonid===\"button1\")\r\n        {\r\n            Flag[0]=true\r\n        }\r\n        if(buttonid===\"button2\")\r\n        {\r\n            Flag[1]=true\r\n        }\r\n        if(turn===0)\r\n        {   \r\n            turn=1\r\n            time.innerHTML=`Turn variable: ${turn} , Process Flag(Intrested in Using Critical Section) Process 1: ${Flag[0]} Process 2: ${Flag[1]}`\r\n            setTimeout(()=>{\r\n                setTimeout(()=>{\r\n                        buttondiv.appendChild(button)\r\n                        // console.log(turn)\r\n                        turn=0\r\n                        time.innerHTML=`Turn variable: ${turn} , Process Flag(Intrested in Using Critical Section) Process 1: ${Flag[0]} Process 2: ${Flag[1]}`\r\n                },10000)\r\n                criticalsection.appendChild(button)\r\n                // criticalsection.remove(button)\r\n            },1000)\r\n        }\r\n        else\r\n        {\r\n            alert(\"Critical section not available\")\r\n        }\r\n}\r\nfunction Turn(){\r\n    return(\r\n        <>\r\n            <h1 style={heading}>Patersion Algorithm</h1>\r\n            <div style={{display: \"grid\",gridTemplateColumns: \"auto auto auto\"}}>\r\n            <Card style={{ width: '18rem',margin: '3rem'}}>\r\n  <Card.Body>\r\n    <Card.Title>Information Card</Card.Title>\r\n    <Card.Subtitle className=\"mb-2 text-muted\">Patersion Algorithm(Solution)</Card.Subtitle>\r\n    <Card.Text>\r\n        {/* <p>Turn Variable or Strict Alternation Approach</p> */}\r\n        This is a software mechanism implemented at user mode. It is a busy waiting solution can be implemented for only two processes. It uses two variables that are turn variable and interested variable.\r\n    </Card.Text>\r\n    <Card.Link href=\"https://www.javatpoint.com/os-paterson-solution\">More Info</Card.Link>\r\n    {/* <Card.Link href=\"#\">Another Link</Card.Link> */}\r\n  </Card.Body>\r\n</Card>\r\n<div id=\"buttondiv\">\r\n            <button id=\"button1\" onClick={critical} style={buttons}> Process 1</button>\r\n<button id=\"button2\" onClick={critical} style={buttons}> Process 2</button>\r\n            </div> \r\n            <div style={{margin: \"3rem\",border: \"0.2rem solid black\"}}>\r\n                <ol>\r\n                    <li> Mutual Exclusion ✔️</li>\r\n                    <li> Process ✔️</li>\r\n                    <li> Bound Waiting ✔️</li>\r\n                    <li> Portability ✔️</li>\r\n                </ol>\r\n            </div>    \r\n            </div>\r\n            <div id=\"maindiv\" style={criticalsec}><h3>Critical Section</h3> </div>\r\n            <div style={turnvariable}><h5 id=\"time\">Turn variable: </h5></div>\r\n        </>\r\n    )\r\n}\r\nexport default Turn","import React from \"react\";\r\nimport Main from './main/Main'\r\nimport {Route,Switch} from 'react-router-dom'\r\nimport Bsem from './Binary/Bsem'\r\nimport Tsl from './tsl/Tsl'\r\nimport Csem from './counting/Counting'\r\nimport Pc from './pcproblem/Pc'\r\nimport Banker from './Bankers/Banker'\r\nimport Turn from './turn/Turn'\r\nimport Petrson from './paterson/Paterson'\r\nfunction App(){\r\n    return(\r\n        <>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Main}/>\r\n            <Route path=\"/tsl\" component={Tsl}/>\r\n            <Route path=\"/Binary\" component={Bsem}/>\r\n            <Route path=\"/counting\" component={Csem}/>\r\n            <Route path=\"/pc\" component={Pc}/>\r\n            <Route path=\"/banker\" component={Banker}/>\r\n            <Route path=\"/turn\" component={Turn}/>\r\n            <Route path=\"/petrson\" component={Petrson}/>\r\n        </Switch>\r\n        </>\r\n    )\r\n}\r\nexport default App","import React from 'react';\r\nimport Dom from 'react-dom';\r\n// import Bsem from './Binary/Bsem';\r\n// import Main from './main/Main'\r\nimport App from './App'\r\n// import Counting from './counting/Counting';\r\n// import Temp from './Temp';\r\n// import Bmain from './Binary/Bmain'\r\n// import Tsl from './tsl/Tsl'\r\n// import Pcproblem from './pcproblem/Pc'\r\n// import Banker from './Bankers/Banker'\r\n// import Turn from './turn/Turn'\r\n// import Paterson from './paterson/Paterson'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nDom.render(\r\n    <>\r\n    <BrowserRouter>\r\n        {/* <Turn /> */}\r\n        {/* <Paterson /> */}\r\n    {/* <Banker /> */}\r\n            <App />\r\n        {/* <Pcproblem /> */}\r\n        {/* <Main /> */}\r\n        {/* <Bsem /> */}\r\n        {/* <Counting /> */}\r\n        {/* <Bmain /> */}\r\n        {/* <Tsl /> */}\r\n    </BrowserRouter>\r\n    </>\r\n    ,document.getElementById(\"root\")\r\n)"],"sourceRoot":""}